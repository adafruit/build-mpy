# SPDX-FileCopyrightText: 2022 Alec Delaney, written for Adafruit Industries
#
# SPDX-License-Identifier: MIT

name: 'Build package of .mpy files'
description: 'Build mpy-cross for usage in GitHub Actions'
inputs:
  cpy-tag:
    description: 'The CircuitPython version of mpy-cross to build'
    required: true
  repo-name:
    description: >
      The name for the CircuitPython repo.  The default is 'circuitpython-repo',
      and there typically isn't any reason to change this unless it conflicts
      with an existing folder name in your repository.
    required: true
    default: 'circuitpython-repo'
  mpy-directory:
    description: >
      The directory to look for files to compile with mpy-cross.  If none
      is provided, the root directory will be used. This also becomess the
      basis for filepaths in the mpy manifest file, if one is provided.
    required: true
    default: "."
  mpy-manifest-file:
    description: >
      Path to a manifest file containing filepaths to convert. If no
      manifest is provided, all applicable files will be converted.
    required: true
    default: ""
  mpy-manifest-type:
    description: >
      The type of manifest to use for compiling if one is provided. The
      default is "include", but if "exclude" is provided, then all Python
      files EXCEPT the ones listed will be compuled with mpy-cross.
    required: true
    default: "include"
  zip-directory:
    description: >
      The directory of files to bundle.  If none is provided, the root
      directory will be used.  This also becomess the basis for filepaths
      in the zip manifest file, if one is provided.
    required: true
    default: "."
  zip-manifest-file:
    description: >
      Path to a manifest file containing filepaths to include in the zip
      file. If no manifest is provided, all files will be included. Either
      this or exclude-zip-manifest can be defined.
    required: true
    default: ""
  zip-manifest-type:
    description: >
      The type of manifest to use for zipping, if one is provided. The
      default is "include", but if "exclude" is provided, then all files
      EXCEPT the ones listed will be zipped.
    required: true
    default: "include"
runs:
  using: "composite"
  steps:
    - name: Install build tools
      shell: bash
      run: |
        sudo apt install build-essential
        sudo add-apt-repository ppa:pybricks/ppa
        sudo apt install git gettext uncrustify
    - name: Clone adafruit/circuitpython
      uses: actions/checkout@v3
      with:
        repository: adafruit/circuitpython
        path: ${{ inputs.repo-name }}
    - name: Enter CircuitPython repo, checkout tag, and update
      shell: bash
      run: |
        cd ${{ inputs.repo-name }}
        git fetch
        git checkout ${{ inputs.cpy-tag }}
        make fetch-submodules
    - name: Build mpy-cross
      shell: bash
      run: |
        cd ${{ inputs.repo-name }}/mpy-cross
        make clean
        make
    - name: Compile MPY files
      shell: bash
      run: |
        # Store repo name
        reponame="${{ inputs.repo-name }}"

        # Read MPY manifest file contents, if needed
        if [[ "${{ inputs.mpy-manifest-file }}" != "" ]]
        then
          readarray mpymanifestfiles < "${{ inputs.mpy-manifest-file }}"
        fi

        # Compile MPY files
        mpyresults=()
        pyfiles=$(find ${{ inputs.mpy-directory }} -name "*.py" ! -path "./${{ inputs.repo-name }}/*" ! -name "*code.py" -printf '%P\n')
        for file in ${pyfiles[@]}
        do
          if [[ "${{ inputs.mpy-manifest-file }}" == "" ]] || \
             [[ ( "${{ inputs.mpy-manifest-type }}" == "include" && "${mpymanifestfiles[*]}" =~ "${file}" ) || \
              ( "${{ inputs.mpy-manifest-type }}" == "exclude" && ! "${mpymanifestfiles[*]}" =~ "${file}" ) ]]
          then
            echo "Compiling $file"
            outputmpy="${{ inputs.mpy-directory }}/${file%.*}.mpy"
            mpyresults+=("$outputmpy")
            ${reponame}/mpy-cross/mpy-cross ${{ inputs.mpy-directory }}/$file -o $outputmpy
          fi
        done

        # Delete the CircuitPython repo
        echo "Deleting CircuitPython repository folder"
        rm -r ${{ inputs.repo-name }}

        # Read ZIP manifest file contents, if needed
        if [[ "${{ inputs.zip-manifest-file }}" != "" ]]
        then
          readarray zipmanifestfiles < "${{ inputs.zip-manifest-file }}"
        fi

        # Zip files
        zipresults=()
        allfiles=$(find ${{ inputs.zip-directory }} -type f ! -path "./.git/*" -printf '%P\n')
        for file in ${allfiles[@]}
        do

          if [[ "${{ inputs.zip-manifest-file }}" == "" ]] || \
             [[ ( "${{ inputs.zip-manifest-type }}" == "include" && "${zipmanifestfiles[*]}" =~ "${file}" ) || \
              ( "${{ inputs.zip-manifest-type }}" == "exclude" && ! "${zipmanifestfiles[*]}" =~ "${file}" ) ]]
          then
            potentialmpy="${file%.*}.mpy"
            if [[ "${{ inputs.zip-directory }}" != "." ]]
            then
              potentialmpy="${{ inputs.zip-directory }}/$potentialmpy"
            fi

            if [[ "${mpyresults[*]}" =~ "${potentialmpy}" ]] && [[ ! -a "$file" ]]
            then
              zipresults+=("${{ inputs.zip-directory }}/$potentialmpy")
            else
              zipresults+=("${{ inputs.zip-directory }}/$file")
            fi
          fi
        done

        echo "${zipresults[@]}"

        # Delete MPY files
        for file in ${mpyresults[@]}
        do
          echo "Deleting $file"
          rm $file
        done
